#!/bin/bash

set -e -x

# ensure overlay directory supports xattr (aufs does not)
function mountOnTmpfs()
{
	local original
	original=$1
	mkdir -p /tmp$original
	mount -t tmpfs tmpfs /tmp$original
	cp -rp $original/* /tmp$original
	echo /tmp$original
}

function prepareBtrfs()
{
    apt-get update
    apt-get install -y asciidoc xmlto --no-install-recommends
    apt-get install -y pkg-config autoconf
    apt-get build-dep -y btrfs-tools
    mkdir -p $HOME/btrfs
    pushd $HOME/btrfs
        git clone git://git.kernel.org/pub/scm/linux/kernel/git/kdave/btrfs-progs.git
        cd btrfs-progs
        ./autogen.sh
        ./configure
        make
        make install
    popd
}

function mountBtrfs()
{
    dd if=/dev/zero of=/opt/dev0-backstore bs=1M count=3000
    mknod /dev/fake-dev0 b 7 200
    losetup /dev/fake-dev0 /opt/dev0-backstore || return
    mkfs.btrfs /opt/dev0-backstore
    rm -fr /tmp
    mkdir /tmp
    mount -t btrfs /dev/fake-dev0 /tmp
}

if [ ! -f /usr/include/btrfs/version.h ]
then
    prepareBtrfs
    mountBtrfs || true # does not work on concourse
fi

export GARDEN_TEST_ROOTFS=$(mountOnTmpfs /opt/warden/rootfs)

[ -d /opt/warden/nestable-rootfs ] && export GARDEN_NESTABLE_TEST_ROOTFS=$(mountOnTmpfs /opt/warden/nestable-rootfs)
[ -d /opt/warden/fuse-rootfs ] && export GARDEN_FUSE_TEST_ROOTFS=$(mountOnTmpfs /opt/warden/fuse-rootfs)
[ -d /opt/warden/docker-registry-rootfs ] && export GARDEN_DOCKER_REGISTRY_TEST_ROOTFS=$(mountOnTmpfs /opt/warden/docker-registry-rootfs)
[ -d /opt/warden/empty ] && export GARDEN_EMPTY_TEST_ROOTFS=$(mountOnTmpfs /opt/warden/empty)

export GODEPS_WORKSPACE=$PWD/Godeps/_workspace
export GOPATH=$GODEPS_WORKSPACE:$GOPATH
export PATH=$GODEPS_WORKSPACE/bin:$PATH

make

go install github.com/onsi/ginkgo/ginkgo

ginkgo -r -p -race -cover -keepGoing -nodes=4 "$@"

# don't leak coveralls token
set +x

if [ -n "$COVERALLS_TOKEN" ] && [ "$COVERALLS_TOKEN" != "{{coveralls_token}}" ] ; then
  go get github.com/dustin/goveralls

  profiles=$(find . -name '*.coverprofile' | grep -v fake | grep -v Godeps )

  echo mode: set > all.coverprofile
  cat $profiles | grep -v mode: >> all.coverprofile

  goveralls -service drone.io -coverprofile=all.coverprofile $COVERALLS_TOKEN || \
    echo "Coveralls failed. :("
fi
